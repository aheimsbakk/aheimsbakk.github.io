<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>&gt; /dev/null &gt; 2&gt;&amp;1</title><link>http://blog.heimsbakk.net/</link><description></description><atom:link href="http://blog.heimsbakk.net/feeds/arnulf.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 11 Jan 2015 00:00:00 +0100</lastBuildDate><item><title>zram: Compressed RAM based block devices</title><link>http://blog.heimsbakk.net/zram.html</link><description>&lt;p&gt;From &lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/blockdev/zram.txt"&gt;zram&lt;/a&gt; documentation: &lt;em&gt;The zram module creates RAM based block devices named /dev/zram&amp;lt;id&amp;gt; (&amp;lt;id&amp;gt; = 0, 1, ...). Pages written to these disks are compressed and stored in memory itself. These disks allow very fast I/O and compression provides good amounts of memory savings. Some of the usecases include /tmp storage, use as swap disks, various caches under /var and maybe many more :)&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/blockdev/zram.txt"&gt;zram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="example-of-compressed-swap-in-memory"&gt;
&lt;h2&gt;Example of compressed swap in memory&lt;/h2&gt;
&lt;p&gt;Write this commands in &lt;code&gt;/etc/rc.local&lt;/code&gt; to create a 2G compressed swap partition in memory.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Load the module and create one zram device, /dev/zram0&lt;/span&gt;
modprobe zram &lt;span class="nv"&gt;num_devices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1

&lt;span class="c"&gt;# Maximum of compressed streams (keep same as CPUs)&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;4 &amp;gt; /sys/devices/virtual/block/zram0/max_comp_streams

&lt;span class="c"&gt;# Size of zram0 device in k/m/g&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;2g &amp;gt; /sys/devices/virtual/block/zram0/disksize

&lt;span class="c"&gt;# Comression compression algorithm to use&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;lzo &amp;gt; /sys/devices/virtual/block/zram0/comp_algorithm

&lt;span class="c"&gt;# Create the swap file system&lt;/span&gt;
mkswap /dev/zram0

&lt;span class="c"&gt;# Enable the swap partition with high priority&lt;/span&gt;
swapon /dev/zram0 -p 10
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;!-- # vim: set spell spl=en: --&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 11 Jan 2015 00:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2015-01-11:zram.html</guid><category>howto</category><category>kernel</category><category>zram</category></item><item><title>Record a PulseAudio sound stream</title><link>http://blog.heimsbakk.net/2015-01-10-pa.html</link><description>&lt;p&gt;Ever wondered on how to record the audio from one application? Either the browser or a streaming application that don't have the option to save audio to a file.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/PulseAudio"&gt;PulseAudio&lt;/a&gt; sound server in your desktop makes this quite easy.&lt;/p&gt;
&lt;p&gt;I've created a small script that captures the current playing sound stream and redirects it to &lt;a href="https://en.wikipedia.org/wiki/Flac" title="Free Lossless Audio Codec"&gt;FLAC&lt;/a&gt; audio file. After the capture is started, you can start playing sound from other programs. It won't interfere with the current capture.&lt;/p&gt;
&lt;h2&gt;Capture audio&lt;/h2&gt;
&lt;h3&gt;Pre requests&lt;/h3&gt;
&lt;p&gt;You have to install a couple of programs, if you don't have them from before, to make the bash script work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install pulseaudio-utils flac coreutils
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;The script&lt;/h3&gt;
&lt;p&gt;This is my &lt;code&gt;record-app.sh&lt;/code&gt; script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;BN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;SI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pacmd list-sink-inputs | grep -m 1 index | egrep -o &lt;span class="s2"&gt;&amp;quot;[[:digit:]]+&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;usage: $BN filename&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$SI&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error: no input sinks found&amp;quot;&lt;/span&gt;
  &lt;span class="nb"&gt;exit &lt;/span&gt;2
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;N&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$BN&lt;/span&gt; recording:
&lt;span class="nb"&gt;echo&lt;/span&gt; · Found sink index «&lt;span class="nv"&gt;$SI&lt;/span&gt;»
&lt;span class="nb"&gt;echo&lt;/span&gt; · Loading module-null-sink
&lt;span class="nv"&gt;MI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pactl load-module module-null-sink &lt;span class="nv"&gt;sink_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;rec&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{ echo · Trying to delete null sink «rec»; pactl unload-module $MI; }&amp;quot;&lt;/span&gt; EXIT
&lt;span class="nb"&gt;echo&lt;/span&gt; · Moving sink «&lt;span class="nv"&gt;$SI&lt;/span&gt;» to null sink «rec»
pactl move-sink-input &lt;span class="nv"&gt;$SI&lt;/span&gt; rec
&lt;span class="nb"&gt;echo&lt;/span&gt; · Saving sound data to «&lt;span class="nv"&gt;$N&lt;/span&gt;.flac» 
parec -d rec.monitor | flac --endian&lt;span class="o"&gt;=&lt;/span&gt;little --sign&lt;span class="o"&gt;=&lt;/span&gt;signed --channels&lt;span class="o"&gt;=&lt;/span&gt;2 --bps&lt;span class="o"&gt;=&lt;/span&gt;16n --sample-rate&lt;span class="o"&gt;=&lt;/span&gt;44100 -o &lt;span class="s2"&gt;&amp;quot;$1.flac&amp;quot;&lt;/span&gt; - 2&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Usage&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;usage: record-app.sh filename
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Example 1&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./record-app.sh firefox-sound
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will start to record the current playing audio in Firefox. The audio is saved int the file &lt;code&gt;firefox-sound.flac&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Example 2&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;timeout 1h ./record-app.sh firefox-sound
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will record the current playing audio in Firefox for one hour, and then automatically quit. Audio saved to &lt;code&gt;firefox-sound.flac&lt;/code&gt; in this example too.&lt;/p&gt;
&lt;h2&gt;Caveats&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If the file you record to exists, the program automatically quits&lt;/li&gt;
&lt;li&gt;To ensure capture of the sound, only play sound from one program&lt;/li&gt;
&lt;li&gt;Using the timeout command will yield in a non fatal error on exit&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While capturing, no sound will be played through the speakers&lt;/p&gt;
&lt;p&gt;A workaround for this is to start playing the captured file. It won't interfere with the capture of the sound. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;vim: set syn=markdown spell spl=en:&lt;/h6&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 10 Jan 2015 00:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2015-01-10:2015-01-10-pa.html</guid><category>howto</category><category>pulseaudio</category><category>sound</category></item><item><title>Vagrant with OpenStack</title><link>http://blog.heimsbakk.net/2014-12-15-vagrant-openstack.html</link><description>&lt;p&gt;If you want to use &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; with &lt;a href="http://www.openstack.org"&gt;OpenStack&lt;/a&gt;, you need to prepare &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; with installing the &lt;a href="https://github.com/cloudbau/vagrant-openstack-plugin"&gt;vagrant-openstack-plugin&lt;/a&gt;. I had some problems installing it directly through &lt;code&gt;vagrant plugin install&lt;/code&gt;. I had to clone it from &lt;a href="https://github.com"&gt;Github&lt;/a&gt; and install it manually. &lt;/p&gt;
&lt;h2&gt;One time configuration&lt;/h2&gt;
&lt;h3&gt;Install OpenStack plugin in Vagrant&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
git clone https://github.com/cloudbau/vagrant-openstack-plugin
&lt;span class="nb"&gt;cd &lt;/span&gt;vagrant-openstack-plugin
gem build vagrant-openstack-plugin.gemspec
vagrant plugin install vagrant-openstack-plugin-*.gem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add a dummy box to &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; thats needed by the plugin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vagrant box add dummy https://github.com/cloudbau/vagrant-openstack-plugin/raw/master/dummy.box
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Download OpenStack RC file&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Log into OpenStack&lt;/li&gt;
&lt;li&gt;Download OpenStack API RC file&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project&lt;/code&gt; -&amp;gt; &lt;code&gt;Compute&lt;/code&gt; -&amp;gt; &lt;code&gt;Access &amp;amp; Security&lt;/code&gt; -&amp;gt; &lt;code&gt;API Access&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Down RC file by hitting &lt;code&gt;Download OpenStack RC File&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;$USER-openrc.sh&lt;/code&gt; in your &lt;code&gt;~/&lt;/code&gt; or somewhere you prefer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Configure a Vagrant VM&lt;/h2&gt;
&lt;h3&gt;Vagrantfile&lt;/h3&gt;
&lt;p&gt;This is a default generic Vagrant file which starts a &lt;code&gt;m1.tiny&lt;/code&gt; flavor image of Ubuntu Utopic. It requires that you already have added your ssh key to OpenStack. Please add your ssh key with the name &lt;code&gt;$USER_ssh_key&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vagrant-openstack-plugin&amp;#39;&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dummy&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/vagrant&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rsync__exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.git/&amp;quot;&lt;/span&gt;

  &lt;span class="c1"&gt;# Make sure the private key from the key pair is provided&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/.ssh/id_rsa&amp;quot;&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:openstack&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flavor&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/m1.tiny/&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ubuntu CI utopic 2014-09-18&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_AUTH_URL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/tokens&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;_ssh_key&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ubuntu&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# The tenant have two networks, so need to specify at least one&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floating_ip&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:auto&lt;/span&gt; 
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floating_ip_pool&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;public&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap.sh&amp;quot;&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="no"&gt;SCRIPT&lt;/span&gt;
&lt;span class="sh"&gt;    # Set your country code here to get a local repositroy&lt;/span&gt;
&lt;span class="sh"&gt;    CN=&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="sh"&gt;    grep -q repo.met.no /etc/apt/sources.list || sed -i~ &amp;quot;s#nova.clouds.archive.ubuntu.com#$CN.archive.ubuntu.com#g&amp;quot; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="sh"&gt;    apt-get update&lt;/span&gt;
&lt;span class="no"&gt;  SCRIPT&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;myvm&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;bootstrap.sh&lt;/h3&gt;
&lt;p&gt;Create your custom bootstrap file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Your aditional bootstrap here...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running Vagrant&lt;/h2&gt;
&lt;p&gt;Remember to source your OpenStack RC file before you run Vagrant up. You need to do that in each shell windows you are going to run Vagrant in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/&lt;span class="nv"&gt;$USER&lt;/span&gt;-openrc.sh
vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;vim: set syn=markdown spell spl=en:&lt;/h6&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Thu, 18 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2014-12-18:2014-12-15-vagrant-openstack.html</guid><category>howto</category><category>openstack</category><category>vagrant</category></item><item><title>fio - flexible I/O tester</title><link>http://blog.heimsbakk.net/2014-12-15-fio.html</link><description>&lt;p&gt;From man page: &lt;code&gt;fio&lt;/code&gt; &lt;em&gt;is a tool that will spawn a number of threads or processes doing a particular type of I/O action as specified by the user. The typical use of fio is to write a job file matching the I/O load one wants to simulate.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This example only show how to use &lt;code&gt;fio&lt;/code&gt; to make reproduceable test on a file system. For me it's been useful to catch changes in I/O throughput before and after a system has gone into production. Buy running the same tests on all systems the numbers are comparable. &lt;/p&gt;
&lt;p&gt;All parameter numbers are examples, define your own test according to what you want to measure. &lt;/p&gt;
&lt;h2&gt;Installing fio&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;fio&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running fio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Change &lt;code&gt;bsrange&lt;/code&gt; to the block size range you want to test. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;numjobs&lt;/code&gt; is the number of simultanious read/write threads.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt; is the working file size.&lt;/li&gt;
&lt;li&gt;If you want to test a read heavy load, use &lt;code&gt;rwmixread&lt;/code&gt; with a percentage of reads versus writes..&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for &lt;/span&gt;i in &lt;span class="nb"&gt;read &lt;/span&gt;write readwrite randread randwrite randrw; &lt;span class="k"&gt;do &lt;/span&gt;fio --name&lt;span class="o"&gt;=&lt;/span&gt;fio  --write_bw_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --write_iops_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --write_lat_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --ioengine&lt;span class="o"&gt;=&lt;/span&gt;sync --size&lt;span class="o"&gt;=&lt;/span&gt;10G --runtime&lt;span class="o"&gt;=&lt;/span&gt;60 --rw&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --norandommap --refill_buffers --randrepeat&lt;span class="o"&gt;=&lt;/span&gt;0  --iodepth&lt;span class="o"&gt;=&lt;/span&gt;1 --direct&lt;span class="o"&gt;=&lt;/span&gt;1 --numjobs&lt;span class="o"&gt;=&lt;/span&gt;8 --group_reporting --bsrange&lt;span class="o"&gt;=&lt;/span&gt;4k-4k; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Generating I/O plots&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fio2gnuplot -i -g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For me is the most interesting plot is &lt;strong&gt;compare-result-2Dsmooth.png&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Generating bandwidth plots&lt;/h2&gt;
&lt;p&gt;Testing bandwidth is better to do with a larger block size. I usually set a block size between 64k to 1m. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for &lt;/span&gt;i in &lt;span class="nb"&gt;read &lt;/span&gt;write readwrite randread randwrite randrw; &lt;span class="k"&gt;do &lt;/span&gt;fio --name&lt;span class="o"&gt;=&lt;/span&gt;fio  --write_bw_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --write_iops_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --write_lat_log&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --ioengine&lt;span class="o"&gt;=&lt;/span&gt;sync --size&lt;span class="o"&gt;=&lt;/span&gt;10G --runtime&lt;span class="o"&gt;=&lt;/span&gt;60 --rw&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; --norandommap --refill_buffers --randrepeat&lt;span class="o"&gt;=&lt;/span&gt;0  --iodepth&lt;span class="o"&gt;=&lt;/span&gt;1 --direct&lt;span class="o"&gt;=&lt;/span&gt;1 --numjobs&lt;span class="o"&gt;=&lt;/span&gt;8 --group_reporting --bsrange&lt;span class="o"&gt;=&lt;/span&gt;64k-1m; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Generate the bandwidth plot.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fio2gnuplot -b -g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For me is the most interesting plot is &lt;strong&gt;compare-result-2Dsmooth.png&lt;/strong&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Mon, 15 Dec 2014 00:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2014-12-15:2014-12-15-fio.html</guid><category>io</category><category>benchmark</category><category>howto</category></item><item><title>Power saving on laptop</title><link>http://blog.heimsbakk.net/2014-04-13-powersave.html</link><description>&lt;p&gt;Notes for power saving on my i5 laptop.&lt;/p&gt;
&lt;h2&gt;/etc/rc.local&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#  SATA power save&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;medium_power | tee /sys/class/scsi_host/host*/link_power_management_policy &amp;gt; /dev/null

&lt;span class="c"&gt;# Set minimum performance to 30% of CPU MHz &lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;30 &amp;gt; /sys/devices/system/cpu/intel_pstate/min_perf_pct

&lt;span class="c"&gt;# Set CPU governor to power save since we run on a laptop&lt;/span&gt;
&lt;span class="c"&gt;# Valid values: powersave performance&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;powersave | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor &amp;gt; /dev/null

&lt;span class="c"&gt;# Increase for CrashPlan so unlocking gnome-shell lock screen works&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;1048576 &amp;gt; /proc/sys/fs/inotify/max_user_watches
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;/etc/default/grub&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Make my back light buttons work correctly&lt;/span&gt;
&lt;span class="c"&gt;# Full power save for GPU&lt;/span&gt;
&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;video.use_native_backlight=1 i915.enable_rc6=7 i915.enable_fbc=1 i915.lvds_downclock=1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;vim: set spell spl=en syn=markdown:&lt;/h6&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 14 Dec 2014 20:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2014-12-14:2014-04-13-powersave.html</guid><category>i915</category><category>intel</category><category>pstate</category><category>grub</category></item><item><title>View Google Earth in the browser</title><link>http://blog.heimsbakk.net/2014-06-19-webgl.html</link><description>&lt;p&gt;Google now supports Google Earth in Google Maps. As far as I know it works in &lt;a href="https://en.wikipedia.org/wiki/Google_Chrome"&gt;Chrome&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Chromium_%28web_browser%29"&gt;Chromium&lt;/a&gt;. If Google Earth isn't available where the satellite view options is, your graphic card is in the browsers blacklist.&lt;/p&gt;
&lt;p&gt;To force enabling &lt;a href="https://en.wikipedia.org/wiki/WebGL"&gt;WebGL&lt;/a&gt; in the browser start it with the following options&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chromium-browser --enable-webgl --ignore-gpu-blacklist
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can use Google Earth in &lt;a href="https://maps.google.com"&gt;maps.google.com&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Thu, 19 Jun 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-06-19:2014-06-19-webgl.html</guid><category>chromium</category><category>howto</category><category>maps</category></item><item><title>Vagrant, development environments made easy</title><link>http://blog.heimsbakk.net/2014-05-25-vagrant.html</link><description>&lt;p&gt;Prototyping and testing configurations and system installations is time consuming on traditional hardware. That is why I started using Vagrant for nearly all development, prototyping and testing. It's free and really easy to use. If you install &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; &lt;code&gt;sudo apt-get install virtualbox&lt;/code&gt; first, you'll be up and running in no time.&lt;/p&gt;
&lt;p&gt;Vagrant do profile itself for developers, but &lt;a href="https://en.wikipedia.org/wiki/Sysadmin" title="System administrator"&gt;sysadmin&lt;/a&gt;s has much to gain by using such tools to make life easier for themselves. Automation and reproducibility is key concepts in modern system administration. We need to think more and more like developers, as much as developers need to think more and more like &lt;a href="https://en.wikipedia.org/wiki/Sysadmin" title="System administrator"&gt;sysadmin&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;Excerpt: &lt;em&gt;Create and configure lightweight, reproducible, and portable development environments.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 25 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-25:2014-05-25-vagrant.html</guid><category>vagrant</category><category>virtualbox</category></item><item><title>Only Firefox is safe post Heartblead</title><link>http://blog.heimsbakk.net/2014-05-12-revocation.html</link><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Steve_Gibson_%28computer_programmer%29"&gt;Steve Gibson&lt;/a&gt; have a nice round-up where he explains how certificate revocation does work and why Chrome and Chromiums certificate revocation scheme doesn't work. I recommend to read both &lt;a href="https://en.wikipedia.org/wiki/Steve_Gibson_%28computer_programmer%29"&gt;Steve Gibson&lt;/a&gt;'s article on &lt;a href="https://www.grc.com/revocation/crlsets.htm"&gt;An Evaluation of the Effectiveness of Chrome's CRLSets&lt;/a&gt; and Adam Langley's in my opinion a bit missplaced answer &lt;a href="https://www.imperialviolet.org/2014/04/29/revocationagain.html"&gt;Revocation still doesn't work&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.grc.com/revocation.htm"&gt;Security Certificate - Revocation Awareness Test&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Listen to &lt;a href="https://www.grc.com/securitynow.htm"&gt;Security Now!&lt;/a&gt; episode 454 &lt;a href="https://www.grc.com/securitynow.htm#454"&gt;Certificate Revocation Part 2&lt;/a&gt; in which Steve explains about both certificate revocation and Google's CRLSets.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to be safe&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use Firefox until Chrome is fixed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Firefox enable hard fail on &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; errors. &lt;/p&gt;
&lt;p&gt;Goto &lt;strong&gt;Preferences&lt;/strong&gt; → &lt;strong&gt;Advanced&lt;/strong&gt; → &lt;strong&gt;Certificates&lt;/strong&gt; → &lt;strong&gt;Validation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Check &lt;strong&gt;When an OSCP server connection failes, treat the certificate as invalid.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Mon, 12 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-12:2014-05-12-revocation.html</guid><category>chrome</category><category>firefox</category><category>security</category><category>ssl</category></item><item><title>Flashing a custom rom on Nexus 4</title><link>http://blog.heimsbakk.net/2014-05-11-rootnexus.html</link><description>&lt;p&gt;Flashing a custom image on an &lt;a href="https://en.wikipedia.org/wiki/Android_%28operating_system%29" title="Android operating system"&gt;Android&lt;/a&gt; mobile could be just fun. But if you don't know why you want to do it, or do it just because it's a challenge. &lt;strong&gt;Then don't!&lt;/strong&gt; &lt;/p&gt;
&lt;h2&gt;The bad and the good&lt;/h2&gt;
&lt;p&gt;I'm only pointing out some of the cons and the pros here.&lt;/p&gt;
&lt;h3&gt;Negative sides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;An OS image could contain &lt;a href="https://en.wikipedia.org/wiki/Malware" title="Malware"&gt;malware&lt;/a&gt;; only use community trusted images.&lt;/li&gt;
&lt;li&gt;If you don't pay attention you can get &lt;a href="https://en.wikipedia.org/wiki/Malware" title="Malware"&gt;malware&lt;/a&gt; running as root. That's B A D !&lt;/li&gt;
&lt;li&gt;May not have all the phones vendor functionality. &lt;/li&gt;
&lt;li&gt;The image may be buggy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Consequences of a buggy image&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Lock up your phone when you least expect it.&lt;/li&gt;
&lt;li&gt;Drain the battery quicker. &lt;/li&gt;
&lt;li&gt;Suddenly reboot.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Positive sides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You can get a newer more secure operating system.&lt;/li&gt;
&lt;li&gt;Use less battery.&lt;/li&gt;
&lt;li&gt;No &lt;a href="https://en.wikipedia.org/wiki/Crapware" title="Pre-installed software"&gt;crapware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Extra security functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Flashing CyanogenMod&lt;/h2&gt;
&lt;p&gt;One of the custom &lt;a href="https://en.wikipedia.org/wiki/Android_%28operating_system%29" title="Android operating system"&gt;Android&lt;/a&gt; images based on &lt;a href="https://source.android.com" title="Android Open Source Project"&gt;AOSP&lt;/a&gt; is &lt;a href="http://www.cyanogenmod.org"&gt;CyanogenMod&lt;/a&gt;. As I know, it's one of the more used ones. Quite stable if you keep away from the &lt;a href="https://en.wikipedia.org/wiki/Nightlies" title="Neutral build"&gt;nightlies&lt;/a&gt; and rich on functionality but not bloated.&lt;/p&gt;
&lt;h3&gt;Preparations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://developer.android.com/tools/help/adb.html" title="Android Debug Bridge"&gt;adb&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Android_software_development#Fastboot" title="Fastboot"&gt;fastboot&lt;/a&gt; to help manage your Nexus phone.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install android-tools-adb android-tools-fastboot
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download custom a recovery image. Personally I prefer &lt;a href="http://www.clockworkmod.com"&gt;ClockworkMod&lt;/a&gt; and the touch recovery. Note, this image is compiled for the Nexus 4 phone. Other phones use other images.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://download2.clockworkmod.com/recoveries/recovery-clockwork-touch-6.0.4.7-mako.img
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the latest M snapshot from &lt;a href="http://www.cyanogenmod.org"&gt;CyanogenMod&lt;/a&gt; on &lt;a href="http://download.cyanogenmod.org"&gt;download.cyanogenmod.org&lt;/a&gt;. The model name for Nexus 4 is &lt;em&gt;mako&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://download.cyanogenmod.org/get/jenkins/67695/cm-11-20140504-SNAPSHOT-M6-mako.zip
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href="https://en.wikipedia.org/wiki/Google_apps"&gt;Google Apps&lt;/a&gt; from a trusted source. Again I prefer &lt;a href="http://www.cyanogenmod.org"&gt;CyanogenMod&lt;/a&gt; as source and download from &lt;a href="http://wiki.cyanogenmod.org/w/Google_Apps#Downloads"&gt;wiki.cyanogenmod.org&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget http://itvends.com/gapps/gapps-kk-20140105-signed.zip
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And to be on the safe side. Download the origian Nexus 4 firmware from Googles page &lt;a href="https://developers.google.com/android/nexus/images"&gt;Factory Images for Nexus Devices&lt;/a&gt;. Just in case... And if it is the case, untar the file and read the included instructions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://dl.google.com/dl/android/aosp/occam-kot49h-factory-02e344de.tgz
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Doing the deed&lt;/h3&gt;
&lt;p&gt;This is notes for my personal use. If you decide to go through with this I don't take any responsibility for any &lt;a href="https://en.wikipedia.org/wiki/Bricked" title="Bricked"&gt;bricked&lt;/a&gt; or damaged devices. &lt;/p&gt;
&lt;h4&gt;1. Enable USB debugging on Android&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Settings&lt;/strong&gt; → &lt;strong&gt;About phone&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Press repeatedly on &lt;strong&gt;Build number&lt;/strong&gt; until you become a developer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Settings&lt;/strong&gt; → &lt;strong&gt;Developer options&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Check &lt;strong&gt;USB debugging&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. Unlock bootloader&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Connect phone to computer with USB cable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check that the cable is usable by listing devices with adb. If you don't get any response. Change the cable and try again. The last cable could be a cheep charger cable without data wires.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;adb&lt;/span&gt; &lt;span class="n"&gt;devices&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot phone into &lt;a href="https://en.wikipedia.org/wiki/Bootloader" title="Booting"&gt;bootloader&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;adb&lt;/span&gt; &lt;span class="n"&gt;reboot&lt;/span&gt; &lt;span class="n"&gt;bootloader&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check that you get connection with &lt;a href="https://en.wikipedia.org/wiki/Android_software_development#Fastboot" title="Fastboot"&gt;fastboot&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fastboot&lt;/span&gt; &lt;span class="n"&gt;devices&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlock your &lt;a href="https://en.wikipedia.org/wiki/Bootloader" title="Booting"&gt;bootloader&lt;/a&gt;. This takes some time while the phone is erasing all data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fastboot&lt;/span&gt; &lt;span class="n"&gt;oem&lt;/span&gt; &lt;span class="n"&gt;unlock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose &lt;strong&gt;Yes&lt;/strong&gt; on phone by pressing &lt;strong&gt;Volume up&lt;/strong&gt;, and then accept by pressing &lt;strong&gt;Power&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;3. Flash and enter recovery&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flash recovery image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fastboot&lt;/span&gt; &lt;span class="n"&gt;flash&lt;/span&gt; &lt;span class="n"&gt;recovery&lt;/span&gt; &lt;span class="n"&gt;recovery&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;clockwork&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;touch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;6.0.4.7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mako&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter recovery image by pressing &lt;strong&gt;Volume up&lt;/strong&gt; until &lt;strong&gt;Recovery mode&lt;/strong&gt; is shown on top of screen. Press &lt;strong&gt;Power&lt;/strong&gt; to enter the recovery image.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;4. Prepare and install CyanogenMod&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In &lt;a href="http://www.clockworkmod.com"&gt;ClockworkMod&lt;/a&gt; Recovery enter &lt;strong&gt;mounts and storage&lt;/strong&gt; → &lt;strong&gt;format /system&lt;/strong&gt;. &lt;strong&gt;Yes - Format&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;a href="http://www.clockworkmod.com"&gt;ClockworkMod&lt;/a&gt; Recovery enter &lt;strong&gt;mounts and storage&lt;/strong&gt; → &lt;strong&gt;format /data and /data/media (/sdcard)&lt;/strong&gt;. &lt;strong&gt;Yes - Format&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the partitions is OK by going back to main menu and choose &lt;strong&gt;wipe data/factory reset&lt;/strong&gt; and &lt;strong&gt;Yes - Wipe all user data&lt;/strong&gt;. Check that you don't get any errors on formatting &lt;strong&gt;/data&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose &lt;strong&gt;install zip&lt;/strong&gt; → &lt;strong&gt;choose zip from sideload&lt;/strong&gt; and sideload &lt;a href="http://www.cyanogenmod.org"&gt;CyanogenMod&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;adb&lt;/span&gt; &lt;span class="n"&gt;sideload&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20140504&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mako&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then sideload gapps. Select again &lt;strong&gt;choose zip from sideload&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;adb&lt;/span&gt; &lt;span class="n"&gt;sideload&lt;/span&gt; &lt;span class="n"&gt;gapps&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20140105&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kt"&gt;signed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just be on the safe side, go back and choose &lt;strong&gt;wipe data/factory reset&lt;/strong&gt; and &lt;strong&gt;Yes - Wipe all user data&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;reboot system now&lt;/strong&gt;. First boot takes some time, be patient. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you get problems booting into a clean system, I've read that another factory reset could do the trick. &lt;/p&gt;
&lt;h4&gt;5. Encrypt or not&lt;/h4&gt;
&lt;p&gt;After installing the phone you can choose to encrypt it or not. I like to encrypt my device with a passphrase. It's my data so why give it away if the phone get stolen; encryption makes it a bit harder for the bad guys.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 11 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-11:2014-05-11-rootnexus.html</guid><category>android</category><category>cyanogenmod</category><category>firmware</category><category>howto</category></item><item><title>OCSP Stapling on Apache</title><link>http://blog.heimsbakk.net/2014-05-04-ocsp.html</link><description>&lt;p&gt;Excerpt from Remy van Elsts tutorial: &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; stapling is an enhancement to the standard &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; protocol that delivers &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; responses from the server with the certificate, eliminating the need for relying parties (web users) to check &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; responses with the issuing &lt;a href="https://en.wikipedia.org/wiki/Certificate_Authority" title="Certificate authority"&gt;CA&lt;/a&gt;. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session. This tutorial shows you how to set it up with &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read full tutorial on &lt;a href="https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html"&gt;OCSP Stapling on Apache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Create &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; stapling configuration for &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/apache2/conf-available/sslstapeling.conf&lt;/span&gt;
&lt;span class="s"&gt;SSLUseStapling on&lt;/span&gt;
&lt;span class="s"&gt;SSLStaplingCache &amp;quot;shmcb:logs/stapling-cache(150000)&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;SSLStaplingResponseMaxAge 900&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enable configuration, test it and do a restart of &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt; if all is OK.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;a2enconf sslstapeling
apache2ctl configtest
apache2ctl restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; with &lt;a href="https://www.openssl.org"&gt;OpenSSL&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;openssl s_client -connect «yoursite»:443 -tls1 -tlsextdebug -status
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 04 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-04:2014-05-04-ocsp.html</guid><category>apache</category><category>security</category><category>ssl</category></item><item><title>How to get A+ on SSL Labs</title><link>http://blog.heimsbakk.net/2014-05-03-ssl.html</link><description>&lt;p&gt;This will show how to get A+ on &lt;a href="https://www.ssllabs.com/ssltest"&gt;SSL Server Test&lt;/a&gt; from &lt;a href="https://www.ssllabs.com"&gt;Qualys SSL Labs&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Enable &lt;a href="https://httpd.apache.org/docs/current/mod/mod_ssl.html"&gt;SSL&lt;/a&gt; and &lt;a href="https://httpd.apache.org/docs/current/mod/mod_headers.html"&gt;headers&lt;/a&gt; module in &lt;a href="https://httpd.apache.org/docs"&gt;Apache2&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;a2enmod ssl &lt;/span&gt;
&lt;span class="go"&gt;a2enmod headers&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit Apache configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;SSLCertificateFile&lt;/span&gt; &lt;span class="sx"&gt;/etc/ssl/crt/&lt;/span&gt;«yourcert».pem
&lt;span class="nb"&gt;SSLCertificateKeyFile&lt;/span&gt; &lt;span class="sx"&gt;/etc/ssl/crt/&lt;/span&gt;«yourkey».pem
&lt;span class="nb"&gt;SSLCertificateChainFile&lt;/span&gt; &lt;span class="sx"&gt;/etc/ssl/crt/&lt;/span&gt;«intermediatechain».pem

&lt;span class="nb"&gt;Header&lt;/span&gt; always set Strict-Transport-Security &lt;span class="s2"&gt;&amp;quot;max-age=31536000; includeSubDomains&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;SSLEngine&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
&lt;span class="nb"&gt;SSLProtocol&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; -SSLv2 -SSLv3
&lt;span class="nb"&gt;SSLHonorCipherOrder&lt;/span&gt; &lt;span class="k"&gt;On&lt;/span&gt;
&lt;span class="nb"&gt;SSLCipherSuite&lt;/span&gt; EECDH:EDH:AES:!aNULL:!eNULL:!LOW:!RC4:!3DES:!DES:!MD5:!EXP:!PSK:!SRP:!DSS
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;!&lt;/strong&gt; preceding the cipher means that Apache will not use that cipher.&lt;/p&gt;
&lt;h2&gt;View ciphers&lt;/h2&gt;
&lt;p&gt;List the ciphers openssl supports with the current configuration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;openssl ciphers -v -ssl3 -tls1 &lt;span class="s1"&gt;&amp;#39;EECDH:EDH:AES:!aNULL:!eNULL:!LOW:!RC4:!3DES:!DES:!MD5:!EXP:!PSK:!SRP:!DSS&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Explanation&lt;/h2&gt;
&lt;p&gt;With this configuration Apache will prefer &lt;a href="https://en.wikipedia.org/wiki/Perfect_forward_secrecy"&gt;Perfect forward secrecy&lt;/a&gt;. If &lt;a href="https://en.wikipedia.org/wiki/Perfect_forward_secrecy"&gt;Perfect forward secrecy&lt;/a&gt; can't be negotiated it will default to &lt;a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;AES&lt;/a&gt; cipher. This configuration will work on all newer browser. Exceptions are older &lt;a href="https://en.wikipedia.org/wiki/Internet_explorer"&gt;IE&lt;/a&gt;, older Java and a few bots. &lt;/p&gt;
&lt;p&gt;Where there are no links to the information source it's taken from the &lt;a href="https://www.openssl.org/docs/apps/ciphers.html"&gt;documentation&lt;/a&gt; on &lt;a href="https://www.openssl.org"&gt;openssl.org&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Header always set Strict-Transport-Security&lt;/h4&gt;
&lt;p&gt;Force browser to use &lt;a href="https://en.wikipedia.org/wiki/Https"&gt;HTTPS&lt;/a&gt; even if the user enters &lt;a href="https://en.wikipedia.org/wiki/Http"&gt;HTTP&lt;/a&gt;. The browser should remember this setting for a really long time, example a year.&lt;/p&gt;
&lt;h4&gt;SSLHonorCipherOrder On&lt;/h4&gt;
&lt;p&gt;Use the servers preferred encryption not the browsers which may be a weaker cipher.&lt;/p&gt;
&lt;h4&gt;EECDH&lt;/h4&gt;
&lt;p&gt;Ephemeral elliptic-curve Diffie-Hellman, see &lt;a href="https://en.wikipedia.org/wiki/ECDH"&gt;ECDH&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;EDH&lt;/h4&gt;
&lt;p&gt;Ephemeral Diffie-Hellman, see &lt;a href="https://en.wikipedia.org/wiki/Diffie-Helmann"&gt;Diffie–Hellman key exchange&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;AES&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;Advanced Encryption Standard&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;!aNULL&lt;/h4&gt;
&lt;p&gt;The cipher suites offering no authentication. This is currently the anonymous DH algorithms. These cipher suites are vulnerable to a ``man in the middle'' attack and so their use is normally discouraged.&lt;/p&gt;
&lt;h4&gt;!eNULL&lt;/h4&gt;
&lt;p&gt;The «NULL» ciphers that is those offering no encryption. &lt;/p&gt;
&lt;h4&gt;!LOW&lt;/h4&gt;
&lt;p&gt;«Low» encryption cipher suites, currently those using 64 or 56 bit encryption algorithms but excluding export cipher suites.&lt;/p&gt;
&lt;h4&gt;!RC4&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Rc4"&gt;RC4&lt;/a&gt; stream cipher. After attacks on RC4 it is said to be vulnerable. See &lt;a href="https://www.schneier.com/blog/archives/2013/03/new_rc4_attack.html"&gt;New RC4 Attack&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h4&gt;!3DES&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/3des"&gt;Triple DES&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;!DES&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Data_Encryption_Standard"&gt;Data Encryption Standard&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;!MD5&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Md5"&gt;MD5&lt;/a&gt; message-digest algorithm.&lt;/p&gt;
&lt;h4&gt;!EXP&lt;/h4&gt;
&lt;p&gt;Export encryption algorithms. Including 40 and 56 bits algorithms. &lt;/p&gt;
&lt;h4&gt;!PSK&lt;/h4&gt;
&lt;p&gt;Cipher suites using pre-shared keys (PSK). &lt;/p&gt;
&lt;h4&gt;!SRP&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Secure_Remote_Password_protocol"&gt;Secure Remote Password protocol&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;!DSS&lt;/h4&gt;
&lt;p&gt;Cipher suites using DSS authentication, i.e. the certificates carry DSS keys. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 10 Jan 2015 00:00:00 +0100</pubDate><guid>tag:blog.heimsbakk.net,2014-05-03:2014-05-03-ssl.html</guid><category>apache</category><category>howto</category><category>security</category><category>ssl</category></item><item><title>reStructuredText cheat sheet</title><link>http://blog.heimsbakk.net/2014-05-03-rst.html</link><description>&lt;ul class="simple"&gt;
&lt;li&gt;Examples taken from &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;reStructuredText Markup Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See also &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/directives.html"&gt;reStructuredText Directives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="blog-arthicle-metadata"&gt;
&lt;h2&gt;Blog arthicle metadata&lt;/h2&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="gh"&gt;reStructuredText cheat sheet&lt;/span&gt;
&lt;span class="gh"&gt;############################&lt;/span&gt;

&lt;span class="nc"&gt;:date:&lt;/span&gt; &lt;span class="nf"&gt;2014-05-03 18:00&lt;/span&gt;
&lt;span class="nc"&gt;:tags:&lt;/span&gt; &lt;span class="nf"&gt;cheatsheet, pelican&lt;/span&gt;
&lt;span class="nc"&gt;:category:&lt;/span&gt; &lt;span class="nf"&gt;blog&lt;/span&gt;
&lt;span class="nc"&gt;:slug:&lt;/span&gt; &lt;span class="nf"&gt;2014-05-03-rst&lt;/span&gt;
&lt;span class="nc"&gt;:author:&lt;/span&gt; &lt;span class="nf"&gt;arnulf&lt;/span&gt;
&lt;span class="nc"&gt;:summary:&lt;/span&gt; &lt;span class="nf"&gt;My cheat sheet for `reStructuredText &amp;lt;http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html&amp;gt;`_ syntax with examples how it will look after parsing. reStructuredText_ is an alternative for `Markedown &amp;lt;http://daringfireball.net/projects/markdown&amp;gt;`_.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="sections"&gt;
&lt;h2&gt;Sections&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#sections"&gt;rST doc&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="gh"&gt;===============&lt;/span&gt;
&lt;span class="gh"&gt; Second heading&lt;/span&gt;
&lt;span class="gh"&gt;===============&lt;/span&gt;

---------------
 Third heading
---------------

&lt;span class="gh"&gt;Fourth heading&lt;/span&gt;
&lt;span class="gh"&gt;==============&lt;/span&gt;

&lt;span class="gh"&gt;Fift heading&lt;/span&gt;
&lt;span class="gh"&gt;-------------&lt;/span&gt;

&lt;span class="gh"&gt;Sixt heading&lt;/span&gt;
&lt;span class="gh"&gt;`````````````&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="second-heading"&gt;
&lt;h2&gt;Second heading&lt;/h2&gt;
&lt;div class="section" id="third-heading"&gt;
&lt;h3&gt;Third heading&lt;/h3&gt;
&lt;div class="section" id="fourth-heading"&gt;
&lt;h4&gt;Fourth heading&lt;/h4&gt;
&lt;div class="section" id="fift-heading"&gt;
&lt;h5&gt;Fift heading&lt;/h5&gt;
&lt;div class="section" id="sixt-heading"&gt;
&lt;h6&gt;Sixt heading&lt;/h6&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="quick-syntax-overview"&gt;
&lt;h2&gt;Quick Syntax Overview&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#quick-syntax-overview"&gt;rST doc&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code rst literal-block"&gt;
Paragraphs contain text and may contain inline markup: &lt;span class="ge"&gt;*emphasis*&lt;/span&gt;, &lt;span class="gs"&gt;**strong emphasis**&lt;/span&gt;, &lt;span class="nv"&gt;`interpreted text`&lt;/span&gt;, &lt;span class="s"&gt;``inline literals``&lt;/span&gt;, standalone hyperlinks (http://www.python.org), external hyperlinks (Python_), internal cross-references (example_), footnote references (&lt;span class="s"&gt;[1]_&lt;/span&gt;), citation references (&lt;span class="s"&gt;[CIT2002]_&lt;/span&gt;), substitution references (|example|), _&lt;span class="nv"&gt;`inline internal targets`&lt;/span&gt; and &lt;span class="na"&gt;:code:&lt;/span&gt;&lt;span class="nv"&gt;`code snippets`&lt;/span&gt;.
&lt;/pre&gt;
&lt;p&gt;Paragraphs contain text and may contain inline markup: &lt;em&gt;emphasis&lt;/em&gt;, &lt;strong&gt;strong emphasis&lt;/strong&gt;, &lt;cite&gt;interpreted text&lt;/cite&gt;, &lt;tt class="docutils literal"&gt;inline literals&lt;/tt&gt;, standalone hyperlinks (&lt;a class="reference external" href="http://www.python.org"&gt;http://www.python.org&lt;/a&gt;), external hyperlinks (&lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt;), internal cross-references (&lt;a class="reference internal" href="#example"&gt;example&lt;/a&gt;), footnote references (&lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;), citation references
(&lt;a class="citation-reference" href="#cit2002" id="id2"&gt;[CIT2002]&lt;/a&gt;), substitution references (Replaced text), &lt;span class="target" id="inline-internal-targets"&gt;inline internal targets&lt;/span&gt; and &lt;code&gt;code snippets&lt;/code&gt;.&lt;/p&gt;
&lt;div class="section" id="lists"&gt;
&lt;h3&gt;Lists&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="m"&gt;*&lt;/span&gt; One

&lt;span class="m"&gt;*&lt;/span&gt; Two

 &lt;span class="m"&gt;1.&lt;/span&gt; Test

 &lt;span class="m"&gt;2.&lt;/span&gt; Test

&lt;span class="m"&gt;*&lt;/span&gt; Three
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One&lt;/li&gt;
&lt;li&gt;Two&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Three&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="footnotes"&gt;
&lt;h3&gt;Footnotes&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt;  &lt;span class="nt"&gt;[1]&lt;/span&gt; A footnote contains body elements, consistently
    indented by at least 3 spaces.
&lt;/pre&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;A footnote contains body elements, consistently
indented by at least 3 spaces.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="citations"&gt;
&lt;h3&gt;Citations&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt;  &lt;span class="nt"&gt;[CIT2002]&lt;/span&gt; Just like a footnote, except the label is
    textual.
&lt;/pre&gt;
&lt;table class="docutils citation" frame="void" id="cit2002" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[CIT2002]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Just like a footnote, except the label is
textual.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="hyperlink-targets"&gt;
&lt;h3&gt;Hyperlink targets&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="nt"&gt;_Python:&lt;/span&gt; http://www.python.org

&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="nt"&gt;_example:&lt;/span&gt;

The &amp;quot;_example&amp;quot; target above points to this paragraph.
&lt;/pre&gt;
&lt;p id="example"&gt;The &amp;quot;_example&amp;quot; target above points to this paragraph.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="replacement-text"&gt;
&lt;h3&gt;Replacement text&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt;  &lt;span class="nt"&gt;|example|&lt;/span&gt; &lt;span class="ow"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; Replaced text
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Inline internal targets&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
Point to &lt;span class="s"&gt;`inline internal targets`_&lt;/span&gt;.
&lt;/pre&gt;
&lt;p&gt;Point to &lt;a class="reference internal" href="#inline-internal-targets"&gt;inline internal targets&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="definitions-of-terms"&gt;
&lt;h3&gt;Definitions of terms&lt;/h3&gt;
&lt;pre class="code rest literal-block"&gt;
term (up to a line of text)
   Definition of the term, which must be indented

   and can even consist of multiple paragraphs

next term
   Description.
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;term (up to a line of text)&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;Definition of the term, which must be indented&lt;/p&gt;
&lt;p class="last"&gt;and can even consist of multiple paragraphs&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;next term&lt;/dt&gt;
&lt;dd&gt;Description.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="field-list"&gt;
&lt;h3&gt;Field list&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="nc"&gt;:what:&lt;/span&gt; &lt;span class="nf"&gt;Field lists map field names to field bodies, like&lt;/span&gt;
       database records.  They are often part of an extension
       syntax.

&lt;span class="nc"&gt;:how:&lt;/span&gt; &lt;span class="nf"&gt;The field marker is a colon, the field name, and a&lt;/span&gt;
      colon.

      The field body may contain one or more body elements,
      indented relative to the field marker.
&lt;/pre&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;what:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;Field lists map field names to field bodies, like
database records.  They are often part of an extension
syntax.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;how:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;The field marker is a colon, the field name, and a
colon.&lt;/p&gt;
&lt;p class="last"&gt;The field body may contain one or more body elements,
indented relative to the field marker.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="visualize-math"&gt;
&lt;h2&gt;Visualize math&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/directives.html#math"&gt;rST doc&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code rst literal-block"&gt;
&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;math&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;

  α_t(i) = P(O_1, O_2, … O_t, q_t = S_i λ)
&lt;/pre&gt;
&lt;div class="formula"&gt;
&lt;i&gt;α&lt;/i&gt;&lt;sub&gt;&lt;i&gt;t&lt;/i&gt;&lt;/sub&gt;(&lt;i&gt;i&lt;/i&gt;) = &lt;i&gt;P&lt;/i&gt;(&lt;i&gt;O&lt;/i&gt;&lt;sub&gt;1&lt;/sub&gt;, &lt;i&gt;O&lt;/i&gt;&lt;sub&gt;2&lt;/sub&gt;, …&lt;i&gt;O&lt;/i&gt;&lt;sub&gt;&lt;i&gt;t&lt;/i&gt;&lt;/sub&gt;, &lt;i&gt;q&lt;/i&gt;&lt;sub&gt;&lt;i&gt;t&lt;/i&gt;&lt;/sub&gt; = &lt;i&gt;S&lt;/i&gt;&lt;sub&gt;&lt;i&gt;i&lt;/i&gt;&lt;/sub&gt;&lt;i&gt;λ&lt;/i&gt;)
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tables"&gt;
&lt;h2&gt;Tables&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#grid-tables"&gt;rST doc&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="grid-tables"&gt;
&lt;h3&gt;Grid tables&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
+--------------+----------+-----------+---------------+
&lt;span class="o"&gt;|&lt;/span&gt; row 1, col 1 | column 2 | column 3  | column 4      |
+==============+==========+===========+===============+
&lt;span class="o"&gt;|&lt;/span&gt; row 2        |  Use the command &lt;span class="na"&gt;:code:&lt;/span&gt;&lt;span class="nv"&gt;`ls | more`&lt;/span&gt;.  |
+--------------+----------+-----------+---------------+
&lt;span class="o"&gt;|&lt;/span&gt; row 3        |          |           |               |
+--------------+----------+-----------+---------------+
&lt;/pre&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="28%" /&gt;
&lt;col width="20%" /&gt;
&lt;col width="22%" /&gt;
&lt;col width="30%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;row 1, col 1&lt;/th&gt;
&lt;th class="head"&gt;column 2&lt;/th&gt;
&lt;th class="head"&gt;column 3&lt;/th&gt;
&lt;th class="head"&gt;column 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;row 2&lt;/td&gt;
&lt;td colspan="3"&gt;Use the command &lt;code&gt;ls | more&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;row 3&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="simple-tables"&gt;
&lt;h3&gt;Simple tables&lt;/h3&gt;
&lt;pre class="code rst literal-block"&gt;
=====  =====  =======
A      B      A and B
=====  =====  =======
False  False  False
True   False  False
False  True   False
True   True   True
=====  =====  =======
&lt;/pre&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="29%" /&gt;
&lt;col width="29%" /&gt;
&lt;col width="41%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;A&lt;/th&gt;
&lt;th class="head"&gt;B&lt;/th&gt;
&lt;th class="head"&gt;A and B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 03 May 2014 21:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-03:2014-05-03-rst.html</guid><category>cheatsheet</category><category>pelican</category></item><item><title>Auto generate Pelican blog from Dropbox</title><link>http://blog.heimsbakk.net/2014-05-03-dropbox.html</link><description>&lt;p&gt;This is my notes for how to update my &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; blog automaticlly when I write new posts. See &lt;a href="2014-04-12-pelican"&gt;Creating a blog based on Pelican&lt;/a&gt; for getting started with &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; blog engine.&lt;/p&gt;
&lt;p&gt;A way to be able to blog from anywhere is to use &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; as repository for the your blog. Then let &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; auto regenerate the blog on changes in the &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; folder.&lt;/p&gt;
&lt;p&gt;A prerequest for this recipe is that &lt;code&gt;/var/www&lt;/code&gt; is not directly exposed to the web.&lt;/p&gt;
&lt;h2&gt;Preparing Dropbox&lt;/h2&gt;
&lt;p&gt;First create a new &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; account and create a &lt;code&gt;Pelican&lt;/code&gt; folder. Share this folder with your main &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; account. Now copy the sources for your &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; blog into the the shared folder.&lt;/p&gt;
&lt;p&gt;On your web server, install &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; under the &lt;code&gt;www-data&lt;/code&gt; user. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget -O - &lt;span class="s2"&gt;&amp;quot;https://www.dropbox.com/download?plat=lnx.x86_64&amp;quot;&lt;/span&gt; | tar xzf -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then link up the new &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; account to the web server by accessing the link you get from starting the &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/.dropbox-dist/dropboxd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit crontab for &lt;code&gt;www-data&lt;/code&gt;, &lt;code&gt;crontab -e&lt;/code&gt;, to start &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; daemon if it's not running. useful when the server reboots.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pgrep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dropbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropbox&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dropboxd&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; should be in sync and have your latest source for the blog.&lt;/p&gt;
&lt;h2&gt;Autogenerate blog on change&lt;/h2&gt;
&lt;p&gt;We need to install &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; blog engine and &lt;a href="http://inotify.aiken.cz/?section=incron&amp;amp;page=about&amp;amp;lang=en"&gt;incron&lt;/a&gt; to trigger auto generation of the blog on changes in the &lt;code&gt;~/Dropbox/Pelican/content&lt;/code&gt; folder.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-pelican python-markdown incron
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;code&gt;DROPBOX_DIR&lt;/code&gt; the the &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; &lt;code&gt;Makefile&lt;/code&gt; to point to the &lt;a href="https://en.wikipedia.org/wiki/Virtual_hosting" title="Virtual hosting"&gt;VirtualHost&lt;/a&gt; which stores the blog.&lt;/p&gt;
&lt;p&gt;Then allow the &lt;code&gt;www-data&lt;/code&gt; user to run incron.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;www-data | sudo tee -a /etc/incron.allow
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And as a final step make the incrontab entry for &lt;code&gt;www-data&lt;/code&gt; with &lt;code&gt;ìncrontab -e&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;IN_ATTRIB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;IN_CREATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;IN_DELETE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;IN_NO_LOOP&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Pelican&lt;/span&gt; &lt;span class="n"&gt;dropbox_upload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now &lt;a href="http://blog.getpelican.com"&gt;Pelican&lt;/a&gt; will recreate the blog on each change in &lt;code&gt;~/Dropbox/Pelican/content&lt;/code&gt;. Happy blogging!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 03 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-03:2014-05-03-dropbox.html</guid><category>dropbox</category><category>howto</category><category>incron</category><category>pelican</category></item><item><title>Configuring OpenVPN server on RTN66U</title><link>http://blog.heimsbakk.net/2014-05-01-easyrsa.html</link><description>&lt;p&gt;The router firmware Tomato, see previous post &lt;a href="2014-04-17-tomato"&gt;RT-N66u with Tomato by Shibby firmware&lt;/a&gt;, can act as an &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; server.&lt;/p&gt;
&lt;p&gt;Using open &lt;a href="https://en.wikipedia.org/wiki/Wifi" title="Wi-Fi"&gt;Wi-Fi&lt;/a&gt; access points can be very useful and necessary, but it is inherently insecure. Using the router as an &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; server can increase your privacy and security when you are on the go. By creating an encrypted &lt;a href="https://en.wikipedia.org/wiki/Vpn" title="Virtual Private Network"&gt;VPN&lt;/a&gt; connection back home to the router, you don't only get protection from nosy eavesdroppers but you get access to all your equipment behind the router at home as well.&lt;/p&gt;
&lt;p&gt;For &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; to work we need to create our own &lt;a href="https://en.wikipedia.org/wiki/Certificate_authority" title="Certificate Authority"&gt;CA&lt;/a&gt; for signing both server, the router, and optionally client certificates. This notes will only show how to create a server certificate and configure the router with user name and password authentication.&lt;/p&gt;
&lt;h2&gt;Preparations, create CA&lt;/h2&gt;
&lt;p&gt;Install necessary software. Although haveged, is not required, see &lt;a href="2014-04-29-haveged"&gt;Better entropy with haveged&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install easy-rsa haveged
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a work directory for &lt;a href="https://en.wikipedia.org/wiki/Certificate_authority" title="Certificate Authority"&gt;OpenVPN&lt;/a&gt;. Take care to protect this directory and the files under it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cadir&lt;/span&gt; &lt;span class="err"&gt;«&lt;/span&gt;&lt;span class="n"&gt;yourdomain&lt;/span&gt;&lt;span class="err"&gt;»&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enter your &lt;a href="https://en.wikipedia.org/wiki/Certificate_authority" title="Certificate Authority"&gt;CA&lt;/a&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; «yourdomain»
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit the &lt;code&gt;vars&lt;/code&gt; file and change the following variables to something more sensible for you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KEY_COUNTRY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;US&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KEY_PROVINCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CA&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KEY_CITY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SanFrancisco&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KEY_ORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Funston-Fort&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;KEY_EMAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;me@myhost.mydomain&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Source the variables into current bash session.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ./vars
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do a initial clean.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create your &lt;a href="https://en.wikipedia.org/wiki/Certificate_authority" title="Certificate Authority"&gt;CA&lt;/a&gt; public and private key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Generate your &lt;a href="https://en.wikipedia.org/wiki/Diffie-Helmann" title="Diffie–Hellman key exchange"&gt;Diffie–Hellman&lt;/a&gt; parameters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create your routers public and private key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="err"&gt;«&lt;/span&gt;&lt;span class="n"&gt;yourrouter&lt;/span&gt;&lt;span class="err"&gt;»&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Listing of folder &lt;code&gt;keys&lt;/code&gt; should look something like this now.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;  &lt;span class="n"&gt;dh2048&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pem&lt;/span&gt;  &lt;span class="n"&gt;serial&lt;/span&gt;            &lt;span class="err"&gt;«&lt;/span&gt;&lt;span class="n"&gt;yourrouter&lt;/span&gt;&lt;span class="err"&gt;»&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csr&lt;/span&gt;
&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;  &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;   &lt;span class="err"&gt;«&lt;/span&gt;&lt;span class="n"&gt;yourrouter&lt;/span&gt;&lt;span class="err"&gt;»&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crt&lt;/span&gt;  &lt;span class="err"&gt;«&lt;/span&gt;&lt;span class="n"&gt;yourrouter&lt;/span&gt;&lt;span class="err"&gt;»&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we are ready for configureing the &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; server in the router running &lt;a href="http://tomato.groov.pl"&gt;Tomato by Shibby&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Configuring OpenVPN in Tomato&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Log into the rouers admin interface.&lt;/li&gt;
&lt;li&gt;Go to the menu &lt;strong&gt;VPN Tunneling → OpenVPN Server&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Server 1&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Leave the &lt;strong&gt;Basic&lt;/strong&gt; tab with the defaults.&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Advanced&lt;/strong&gt; tab.  &lt;ol&gt;
&lt;li&gt;Check &lt;strong&gt;Allow User/Pass Auth&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;strong&gt;Allow Only User/Pass(Without cert)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create users and set corresponding passwords.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Go to the &lt;strong&gt;Key&lt;/strong&gt; tab.&lt;ol&gt;
&lt;li&gt;Paste content of &lt;code&gt;ca.crt&lt;/code&gt; into &lt;strong&gt;Certificate Authority&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Paste content of &lt;code&gt;«yourrouter».crt&lt;/code&gt; into &lt;strong&gt;Server Certificate&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Paste content of &lt;code&gt;«yourrouter».key&lt;/code&gt; into &lt;strong&gt;Server Key&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Paste content of &lt;code&gt;dh2048.pem&lt;/code&gt; into &lt;strong&gt;Diffie Hellman parameters&lt;/strong&gt;- &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Scroll to bottom of page and &lt;strong&gt;Save&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Press &lt;strong&gt;Start Now&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's it. Change listening port under &lt;strong&gt;Basic&lt;/strong&gt; as needed. If you use port &lt;code&gt;80&lt;/code&gt; or &lt;code&gt;443&lt;/code&gt; and protocol &lt;code&gt;TCP&lt;/code&gt; you will be able to connect through the most restrictive open access points. Be aware that some home &lt;a href="https://en.wikipedia.org/wiki/Internet_Service_Provider" title="Internet Servicev Provider"&gt;ISP&lt;/a&gt;s tend to block common port as &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Clients&lt;/h2&gt;
&lt;h3&gt;Network Manager&lt;/h3&gt;
&lt;p&gt;Now you can configure &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; on your computer. Remember to install the correct plugin, &lt;code&gt;network-manager-openvpn&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install network-manager-openvpn
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Android&lt;/h3&gt;
&lt;p&gt;Easy to use &lt;a href="https://en.wikipedia.org/wiki/OpenVPN" title="OpenVPN"&gt;OpenVPN&lt;/a&gt; client for Android is &lt;a href="https://play.google.com/store/apps/details?id=de.blinkt.openvpn"&gt;OpenVPN for Android&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Thu, 01 May 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-05-01:2014-05-01-easyrsa.html</guid><category>howto</category><category>tomato</category><category>network</category><category>openvpn</category><category>security</category><category>vpn</category></item><item><title>Better entropy with haveged</title><link>http://blog.heimsbakk.net/2014-04-29-haveged.html</link><description>&lt;p&gt;Entropy is important for generating good encryption keys. Do you have a busy server relying on crypto, generating keys, you need lot of good entropy. Or if you have a disk less system you don't get as much entropy from the kernel that you may wish. One way to get a lot of good entropy is to use haveged. Haveged is closer to a &lt;a href="https://en.wikipedia.org/wiki/TRNG" title="True Random Number Generator"&gt;TRNG&lt;/a&gt; than a &lt;a href="https://en.wikipedia.org/wiki/PRNG" title="PseudoRandom Number Generator"&gt;PRNG&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Excerpt from havegeds homepage: &lt;em&gt;The haveged project is an attempt to provide an easy-to-use, unpredictable random number generator based upon an adaptation of the HAVEGE algorithm. Haveged was created to remedy low-entropy conditions in the Linux random device that can occur under some workloads, especially on headless servers. Current development of haveged is directed towards improving overall reliablity and adaptability while minimizing the barriers to using haveged for other tasks.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.issihosts.com/haveged"&gt;haveged - A simple entropy daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to install&lt;/h2&gt;
&lt;p&gt;Install haveged from the repository - and that's it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install haveged
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enjoy fast good entropy. Check your entropy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat /proc/sys/kernel/random/entropy_avail
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Tue, 29 Apr 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-29:2014-04-29-haveged.html</guid><category>entropy</category><category>howto</category><category>security</category><category>trng</category></item><item><title>RT-N66u with Tomato by Shibby firmware</title><link>http://blog.heimsbakk.net/2014-04-17-tomato.html</link><description>&lt;p&gt;&lt;em&gt;This is a part of my personal notes. Use this information at your own risk. If you are uncertain or don't know what you are doing. Do not proceed.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Asus &lt;a href="http://www.asus.com/Networking/RTN66U"&gt;RT-N66U&lt;/a&gt; is a Linux based wireless router. The stock firmware can be a bit limiting for the more advanced user. If you want better &lt;a href="http://en.wikipedia.org/wiki/Quality_of_service" title="Quality of service"&gt;QoS&lt;/a&gt;, &lt;a href="http://openvpn.net"&gt;OpenVPN&lt;/a&gt; or just more control over the network I recommend installing &lt;a href="http://tomato.groov.pl"&gt;Tomato by Shibby&lt;/a&gt; firmware.&lt;/p&gt;
&lt;p&gt;Download the latest version of the firmware from &lt;a href="http://tomato.groov.pl"&gt;Tomato by Shibby&lt;/a&gt;. Look for &lt;code&gt;Asus RT-N66u 64k&lt;/code&gt; in the version folder in &lt;a href="http://tomato.groov.pl/download/K26RT-N"&gt;K26RT-N&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;I use the all in one, AIO, i.e. &lt;code&gt;tomato-K26USB-1.28.RT-N5x-MIPSR2-117-AIO-64K.trx&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Flash RT-N66u&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download latest &lt;a href="http://tomato.groov.pl"&gt;Tomato by Shibby&lt;/a&gt;, e.g. &lt;a href="http://tomato.groov.pl/download/K26RT-N/build5x-117-EN/Asus%20RT-N66u%2064k/tomato-K26USB-1.28.RT-N5x-MIPSR2-117-AIO-64K.trx"&gt;tomato-K26USB-1.28.RT-N5x-MIPSR2-117-AIO-64K.trx&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Connect the router to a computer with cable.&lt;/li&gt;
&lt;li&gt;Turn off router.e&lt;/li&gt;
&lt;li&gt;Turn on route while holding in reset button. Wait until the power LED starts blinking. The router is in flash mode.&lt;/li&gt;
&lt;li&gt;Configure the network opn the computer to &lt;code&gt;192.168.1.2/255.255.255.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Browse to &lt;a href="http://192.168.1.1"&gt;http://192.168.1.1&lt;/a&gt;, erase &lt;a href="http://en.wikipedia.org/wiki/Non-volatile_random-access_memory" title="Non-volatile random-access memory"&gt;NVRAM&lt;/a&gt; and upload the new firmware.&lt;/li&gt;
&lt;li&gt;This takes some time. &lt;/li&gt;
&lt;li&gt;Configure network on computer to DHCP and wait until it receives a address. &lt;/li&gt;
&lt;li&gt;Browse to &lt;a href="http://192.168.1.1"&gt;http://192.168.1.1&lt;/a&gt; and start configuring the router.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Tips&lt;/h3&gt;
&lt;p&gt;Problems booting. Try to reset &lt;a href="http://en.wikipedia.org/wiki/Non-volatile_random-access_memory" title="Non-volatile random-access memory"&gt;NVRAM&lt;/a&gt; again. Resetting &lt;a href="http://en.wikipedia.org/wiki/Non-volatile_random-access_memory" title="Non-volatile random-access memory"&gt;NVRAM&lt;/a&gt; can also be done by holding in WPS button while powering on. Don't release WPS button before 30 seconds. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Thu, 17 Apr 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-17:2014-04-17-tomato.html</guid><category>firmware</category><category>howto</category><category>network</category><category>tomato</category></item><item><title>SSL Server Test</title><link>http://blog.heimsbakk.net/2014-04-13-ssllabs.html</link><description>&lt;p&gt;Run &lt;a href="https://www.ssllabs.com"&gt;Qualys SSL Labs&lt;/a&gt; test to test the strength and combability of SSL certificate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ssllabs.com/ssltest"&gt;SSL Server Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 22:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-ssllabs.html</guid><category>security</category><category>ssl</category></item><item><title>Find duplicate files</title><link>http://blog.heimsbakk.net/2014-04-13-duplicates.html</link><description>&lt;p&gt;Find all duplicate files in current and sub-directories with bash. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;find -not -empty -type f -printf &lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; | sort -rn | uniq -d | xargs -I&lt;span class="o"&gt;{}&lt;/span&gt; -n1 find -type f -size &lt;span class="o"&gt;{}&lt;/span&gt;c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated&lt;span class="o"&gt;=&lt;/span&gt;separate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Breakdown&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Find all non empty files and print out size.&lt;/li&gt;
&lt;li&gt;Do a numeric sort on size list.&lt;/li&gt;
&lt;li&gt;Print out only duplicate sizes.&lt;/li&gt;
&lt;li&gt;One at a time run find on size and print file names.&lt;/li&gt;
&lt;li&gt;Find md5sum of all files.&lt;/li&gt;
&lt;li&gt;Alphabetical sort md5sums and file names.&lt;/li&gt;
&lt;li&gt;Find all md5sums which repeats and print them in groups. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Alternatively&lt;/h2&gt;
&lt;p&gt;Or do it the easy way and install a tool for finding duplicates files. This tool is much faster than the oneliner above. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install fdupes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This does more or less the same thing as the oneliner.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fdupes -r .
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 21:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-duplicates.html</guid><category>bash</category><category>oneliner</category></item><item><title>Cloud virtual machine</title><link>http://blog.heimsbakk.net/2014-04-13-digitalocean.html</link><description>&lt;p&gt;Easiest way I know to create cloud virtual machine is to create a Droplet on Digital Ocean.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/?refcode=2c2348527899"&gt;DigialOcean&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 17:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-digitalocean.html</guid><category>cloud</category><category>vm</category></item><item><title>Remove unused kernels</title><link>http://blog.heimsbakk.net/2014-04-13-kernel.html</link><description>&lt;p&gt;Removes all but current kernel and headers. This is a note for personal use. Use at your own risk :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dpkg-query -f &lt;span class="s1"&gt;&amp;#39;${Package}\n&amp;#39;&lt;/span&gt; -W |  egrep &lt;span class="s1"&gt;&amp;#39;linux-(headers|image)-[[:digit:]].*(|-generic)&amp;#39;&lt;/span&gt; | grep -v &lt;span class="k"&gt;$(&lt;/span&gt;uname -r | sed &lt;span class="s1"&gt;&amp;#39;s/-generic//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; | sudo xargs apt-get -q -q -yy --purge remove
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Breakdown&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;List all packages.&lt;/li&gt;
&lt;li&gt;Find only linux-image and linux-header packages with version number, not the two main meta packages.&lt;/li&gt;
&lt;li&gt;Remove the linux-image and linux-header for running kernel from the list.&lt;/li&gt;
&lt;li&gt;Purge all listed packages from system without asking any questions.&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 16:45:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-kernel.html</guid><category>bash</category><category>oneliner</category><category>ubuntu</category><category>kernel</category></item><item><title>Modeline in vim</title><link>http://blog.heimsbakk.net/2014-04-13-modeline.html</link><description>&lt;p&gt;Options set in &lt;code&gt;.vimrc&lt;/code&gt; applies to all vim files. You can use modelines to set specific vim options for one file. Modeline option must be set in &lt;code&gt;.vimrc&lt;/code&gt; to take advantage of this option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;modeline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The modeline should be the first line in the file. You can set it inn multiple ways as shown below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vim: set ai et ts=4 sts=4 sw=4 tw=79 cc=80 wrap wb nu sm:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* vim: set enc=UTF-8 ai et ts=4 sts=4 sw=4 tw=79 cc=80 wrap wb nu sm: */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// vim: set enc=UTF-8 ai et ts=4 sts=4 sw=4 tw=79 cc=80 wrap wb nu sm: &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Explanation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enc=UTF-8&lt;/code&gt;&lt;br /&gt;
    Set encoding to UTF-8&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ai&lt;/code&gt;&lt;br /&gt;
    Auto intend&lt;/li&gt;
&lt;li&gt;&lt;code&gt;et&lt;/code&gt;&lt;br /&gt;
    Expand tabs with spaces&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ts=4&lt;/code&gt;&lt;br /&gt;
    Tab stop set to 8&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sts=4&lt;/code&gt;&lt;br /&gt;
    Soft tab stop&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sw=4&lt;/code&gt;&lt;br /&gt;
    Shift width, used by &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tw=79&lt;/code&gt;&lt;br /&gt;
    Text width&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cc=80&lt;/code&gt;&lt;br /&gt;
    Set colour column, a colour bare at character 80&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;br /&gt;
    Wraps text, only affects how the text is displayed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wb&lt;/code&gt;&lt;br /&gt;
    Write a backup before saving files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nu&lt;/code&gt;&lt;br /&gt;
    Show line numbers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sm&lt;/code&gt;&lt;br /&gt;
    Show matching brackets &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;More information in the Vim &lt;a href="http://vimdoc.sourceforge.net/htmldoc"&gt;documentations&lt;/a&gt; under &lt;a href="http://vimdoc.sourceforge.net/htmldoc/options.html"&gt;options&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 16:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-modeline.html</guid><category>howto</category><category>vim</category></item><item><title>Bash getopts example</title><link>http://blog.heimsbakk.net/2014-04-13-getopts.html</link><description>&lt;p&gt;This is a small example how to use getopts in bash. I wrote it down for my own sake, as my own cheatsheet :)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Print help on stderr&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;show_help&lt;span class="o"&gt;(){&lt;/span&gt; 
    show_usage 
    cat &amp;gt;&amp;amp;2 &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;

&lt;span class="s"&gt;Explain all about $(basename $0) here.&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Print usage on stderr&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;show_usage&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$(basename $0) [-a ARG] [-b] [N1 [N2 .. [NN]]]&amp;quot;&lt;/span&gt; &amp;gt;&amp;amp;2
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Print usage and exit with error code 1 if we don&amp;#39;t have any options&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;show_usage
    &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# :  = make getopts silent, handle errors self&lt;/span&gt;
&lt;span class="c"&gt;# a: = option a expects an argument&lt;/span&gt;
&lt;span class="c"&gt;# b  = option b is a true false option&lt;/span&gt;
&lt;span class="c"&gt;# h  = option h is a true false option&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# On invalid option, opt will be replaced with ? &lt;/span&gt;
&lt;span class="c"&gt;# and OPTARG set to argument name&lt;/span&gt;
&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:a:bh&amp;quot;&lt;/span&gt; opt
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;    case&lt;/span&gt; &lt;span class="nv"&gt;$opt&lt;/span&gt; in
        a&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$OPTARG&lt;/span&gt;;;
        b&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="nb"&gt;echo &lt;/span&gt;True;;
        h&lt;span class="o"&gt;)&lt;/span&gt;  show_help; &lt;span class="nb"&gt;exit &lt;/span&gt;1;;
        &lt;span class="se"&gt;\?&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; invalid option: -&lt;span class="nv"&gt;$OPTARG&lt;/span&gt; &amp;gt;&amp;amp;2
            &lt;span class="nb"&gt;exit &lt;/span&gt;1
            ;;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c"&gt;# OPTIND is not reset after getopts is finished. &lt;/span&gt;
&lt;span class="c"&gt;# Loop through argument  [N1 [N2 .. [NN]]] &lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;ARG in &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="p"&gt;@:&lt;/span&gt;&lt;span class="nv"&gt;$OPTIND&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$ARG&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-13:2014-04-13-getopts.html</guid><category>howto</category><category>bash</category></item><item><title>Scaling in the Linux Networking Stack</title><link>http://blog.heimsbakk.net/2014-04-12-link.html</link><description>&lt;p&gt;Documentation for increaseing parallelism and performance for multi-processor systems. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/torvalds/linux/blob/master/Documentation/networking/scaling.txt"&gt;scaling.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 12 Apr 2014 16:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-12:2014-04-12-link.html</guid><category>network</category><category>tuning</category></item><item><title>Creating a blog based on Pelican</title><link>http://blog.heimsbakk.net/2014-04-12-pelican.html</link><description>&lt;p&gt;&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; is a static website generator written in Python. It's perfect for maintaining a tiny blog without having to mess around with databases. Static pages can be served from any Web server. Even your wireless router if you run custom firmware as &lt;a href="http://tomato.groov.pl"&gt;Tomato by Shibby&lt;/a&gt; or &lt;a href="http://www.dd-wrt.com"&gt;dd-wrt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Running Ubuntu Trusty I chose to use Pelican package in repository. A very quick recipe for creating a blog with the default theme.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Pelican and package for &lt;a href="http://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; language. With Markdown you write the content in text and Pelican translates it to HTML.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a directory where you want to maintain your blog.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;myblock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;myblock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the Pelican quick start script and answer all the questions. Add at least one method of uploading your blog to a web server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start by creating your first page in &lt;code&gt;content&lt;/code&gt; directory. Each page should have a heading with some metadata.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Creating&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;based&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Pelican&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;howto&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;arnulf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the local HTTP server and check how your blog is coming along.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Point your browser to &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upload your blog to your web server. I prefer the ssh upload option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;ssh_upload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A more lengthy and better &lt;a href="http://docs.getpelican.com/en/3.3.0/getting_started.html"&gt;getting started guide&lt;/a&gt; on getpelican.com. I did find adam-p's &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;Markdown Cheatsheet&lt;/a&gt; on &lt;a href="https://github.com"&gt;github&lt;/a&gt; quite useful. And not to forget all the themes you can &lt;a href="https://github.com/getpelican/pelican-themes"&gt;download&lt;/a&gt; from &lt;a href="https://github.com"&gt;github&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">arnulf</dc:creator><pubDate>Sat, 12 Apr 2014 00:00:00 +0200</pubDate><guid>tag:blog.heimsbakk.net,2014-04-12:2014-04-12-pelican.html</guid><category>howto</category><category>pelican</category></item></channel></rss>