<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>&gt; /dev/null 2&gt;&amp;1</title><link href="http://blog.heimsbakk.net/" rel="alternate"></link><link href="http://blog.heimsbakk.net/feeds/uris.atom.xml" rel="self"></link><id>http://blog.heimsbakk.net/</id><updated>2016-03-26T21:00:00+01:00</updated><entry><title>Distributed syncing with Syncthing</title><link href="http://blog.heimsbakk.net/posts/2016/2016-03-26-syncthing.html" rel="alternate"></link><updated>2016-03-26T21:00:00+01:00</updated><author><name>Arnulf Heimsbakk</name></author><id>tag:blog.heimsbakk.net,2016-03-26:posts/2016/2016-03-26-syncthing.html</id><summary type="html">&lt;p&gt;I've tried to ditch &lt;a href="https://dropbox.com/"&gt;Dropbox&lt;/a&gt; for a long time. But the need for synchronizing folders between my computers have held me back. &lt;a href="https://syncthing.net/"&gt;Syncthing&lt;/a&gt; solves this for me. It's decentralized syncrhonization between all my units, including my phone, without the need to go through a 3rd party server.&lt;/p&gt;
&lt;p&gt;Excerpt from Syncthings homepage: &lt;em&gt;Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://syncthing.net/"&gt;Syncthing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/syncthing/syncthing/tree/master"&gt;Syncthing on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="network"></category></entry><entry><title>zram: Compressed RAM based block devices</title><link href="http://blog.heimsbakk.net/posts/2015/zram.html" rel="alternate"></link><updated>2015-01-11T00:00:00+01:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2015-01-11:posts/2015/zram.html</id><summary type="html">&lt;p&gt;From &lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/blockdev/zram.txt"&gt;zram&lt;/a&gt; documentation: &lt;em&gt;The zram module creates RAM based block devices named /dev/zram&amp;lt;id&amp;gt; (&amp;lt;id&amp;gt; = 0, 1, ...). Pages written to these disks are compressed and stored in memory itself. These disks allow very fast I/O and compression provides good amounts of memory savings. Some of the usecases include /tmp storage, use as swap disks, various caches under /var and maybe many more :)&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/blockdev/zram.txt"&gt;zram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="example-of-compressed-swap-in-memory"&gt;
&lt;h2&gt;Example of compressed swap in memory&lt;/h2&gt;
&lt;p&gt;Write this commands in &lt;code&gt;/etc/rc.local&lt;/code&gt; to create a 2G compressed swap partition in memory.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Load the module and create one zram device, /dev/zram0&lt;/span&gt;
modprobe zram &lt;span class="nv"&gt;num_devices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1

&lt;span class="c"&gt;# Maximum of compressed streams (keep same as CPUs)&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; &amp;gt; /sys/devices/virtual/block/zram0/max_comp_streams

&lt;span class="c"&gt;# Size of zram0 device in k/m/g&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;2g &amp;gt; /sys/devices/virtual/block/zram0/disksize

&lt;span class="c"&gt;# Comression compression algorithm to use&lt;/span&gt;
&lt;span class="nb"&gt;echo &lt;/span&gt;lzo &amp;gt; /sys/devices/virtual/block/zram0/comp_algorithm

&lt;span class="c"&gt;# Create the swap file system&lt;/span&gt;
mkswap /dev/zram0

&lt;span class="c"&gt;# Enable the swap partition with high priority&lt;/span&gt;
swapon /dev/zram0 -p 10
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;!-- # vim: set spell spl=en: --&gt;
&lt;/div&gt;
</summary><category term="howto"></category><category term="kernel"></category><category term="zram"></category></entry><entry><title>Vagrant, development environments made easy</title><link href="http://blog.heimsbakk.net/posts/2014/2014-05-25-vagrant.html" rel="alternate"></link><updated>2014-05-25T00:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-05-25:posts/2014/2014-05-25-vagrant.html</id><summary type="html">&lt;p&gt;Prototyping and testing configurations and system installations is time consuming on traditional hardware. That is why I started using Vagrant for nearly all development, prototyping and testing. It's free and really easy to use. If you install &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; &lt;code&gt;sudo apt-get install virtualbox&lt;/code&gt; first, you'll be up and running in no time.&lt;/p&gt;
&lt;p&gt;Vagrant do profile itself for developers, but &lt;a href="https://en.wikipedia.org/wiki/Sysadmin" title="System administrator"&gt;sysadmin&lt;/a&gt;s has much to gain by using such tools to make life easier for themselves. Automation and reproducibility is key concepts in modern system administration. We need to think more and more like developers, as much as developers need to think more and more like &lt;a href="https://en.wikipedia.org/wiki/Sysadmin" title="System administrator"&gt;sysadmin&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;Excerpt: &lt;em&gt;Create and configure lightweight, reproducible, and portable development environments.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="vagrant"></category><category term="virtualbox"></category></entry><entry><title>Only Firefox is safe post Heartblead</title><link href="http://blog.heimsbakk.net/posts/2014/2014-05-12-revocation.html" rel="alternate"></link><updated>2014-05-12T00:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-05-12:posts/2014/2014-05-12-revocation.html</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Steve_Gibson_%28computer_programmer%29"&gt;Steve Gibson&lt;/a&gt; have a nice round-up where he explains how certificate revocation does work and why Chrome and Chromiums certificate revocation scheme doesn't work. I recommend to read both &lt;a href="https://en.wikipedia.org/wiki/Steve_Gibson_%28computer_programmer%29"&gt;Steve Gibson&lt;/a&gt;'s article on &lt;a href="https://www.grc.com/revocation/crlsets.htm"&gt;An Evaluation of the Effectiveness of Chrome's CRLSets&lt;/a&gt; and Adam Langley's in my opinion a bit missplaced answer &lt;a href="https://www.imperialviolet.org/2014/04/29/revocationagain.html"&gt;Revocation still doesn't work&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.grc.com/revocation.htm"&gt;Security Certificate - Revocation Awareness Test&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Listen to &lt;a href="https://www.grc.com/securitynow.htm"&gt;Security Now!&lt;/a&gt; episode 454 &lt;a href="https://www.grc.com/securitynow.htm#454"&gt;Certificate Revocation Part 2&lt;/a&gt; in which Steve explains about both certificate revocation and Google's CRLSets.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to be safe&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use Firefox until Chrome is fixed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Firefox enable hard fail on &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; errors. &lt;/p&gt;
&lt;p&gt;Goto &lt;strong&gt;Preferences&lt;/strong&gt; → &lt;strong&gt;Advanced&lt;/strong&gt; → &lt;strong&gt;Certificates&lt;/strong&gt; → &lt;strong&gt;Validation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Check &lt;strong&gt;When an OSCP server connection failes, treat the certificate as invalid.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="chrome"></category><category term="firefox"></category><category term="security"></category><category term="ssl"></category></entry><entry><title>OCSP Stapling on Apache</title><link href="http://blog.heimsbakk.net/posts/2014/2014-05-04-ocsp.html" rel="alternate"></link><updated>2014-05-04T00:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-05-04:posts/2014/2014-05-04-ocsp.html</id><summary type="html">&lt;p&gt;Excerpt from Remy van Elsts tutorial: &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; stapling is an enhancement to the standard &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; protocol that delivers &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; responses from the server with the certificate, eliminating the need for relying parties (web users) to check &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; responses with the issuing &lt;a href="https://en.wikipedia.org/wiki/Certificate_Authority" title="Certificate authority"&gt;CA&lt;/a&gt;. This has the effect of reducing bandwidth, improving perceived site performance, and increasing security for everyone involved in establishing the secure session. This tutorial shows you how to set it up with &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read full tutorial on &lt;a href="https://raymii.org/s/tutorials/OCSP_Stapling_on_Apache2.html"&gt;OCSP Stapling on Apache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Create &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; stapling configuration for &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/apache2/conf-available/sslstapeling.conf&lt;/span&gt;
&lt;span class="s"&gt;SSLUseStapling on&lt;/span&gt;
&lt;span class="s"&gt;SSLStaplingCache &amp;quot;shmcb:logs/stapling-cache(150000)&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;SSLStaplingResponseMaxAge 900&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enable configuration, test it and do a restart of &lt;a href="http://httpd.apache.org"&gt;Apache&lt;/a&gt; if all is OK.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;a2enconf sslstapeling
apache2ctl configtest
apache2ctl restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check &lt;a href="https://en.wikipedia.org/wiki/OCSP" title="Online Certificate Status Protocol"&gt;OCSP&lt;/a&gt; with &lt;a href="https://www.openssl.org"&gt;OpenSSL&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;openssl s_client -connect «yoursite»:443 -tls1 -tlsextdebug -status
&lt;/pre&gt;&lt;/div&gt;</summary><category term="apache"></category><category term="security"></category><category term="ssl"></category></entry><entry><title>Better entropy with haveged</title><link href="http://blog.heimsbakk.net/posts/2014/2014-04-29-haveged.html" rel="alternate"></link><updated>2014-04-29T00:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-04-29:posts/2014/2014-04-29-haveged.html</id><summary type="html">&lt;p&gt;Entropy is important for generating good encryption keys. Do you have a busy server relying on crypto, generating keys, you need lot of good entropy. Or if you have a disk less system you don't get as much entropy from the kernel that you may wish. One way to get a lot of good entropy is to use haveged. Haveged is closer to a &lt;a href="https://en.wikipedia.org/wiki/TRNG" title="True Random Number Generator"&gt;TRNG&lt;/a&gt; than a &lt;a href="https://en.wikipedia.org/wiki/PRNG" title="PseudoRandom Number Generator"&gt;PRNG&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Excerpt from havegeds homepage: &lt;em&gt;The haveged project is an attempt to provide an easy-to-use, unpredictable random number generator based upon an adaptation of the HAVEGE algorithm. Haveged was created to remedy low-entropy conditions in the Linux random device that can occur under some workloads, especially on headless servers. Current development of haveged is directed towards improving overall reliablity and adaptability while minimizing the barriers to using haveged for other tasks.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.issihosts.com/haveged"&gt;haveged - A simple entropy daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to install&lt;/h2&gt;
&lt;p&gt;Install haveged from the repository - and that's it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install haveged
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enjoy fast good entropy. Check your entropy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat /proc/sys/kernel/random/entropy_avail
&lt;/pre&gt;&lt;/div&gt;</summary><category term="entropy"></category><category term="howto"></category><category term="security"></category><category term="trng"></category></entry><entry><title>SSL Server Test</title><link href="http://blog.heimsbakk.net/posts/2014/2014-04-13-ssllabs.html" rel="alternate"></link><updated>2014-04-13T22:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-04-13:posts/2014/2014-04-13-ssllabs.html</id><summary type="html">&lt;p&gt;Run &lt;a href="https://www.ssllabs.com"&gt;Qualys SSL Labs&lt;/a&gt; test to test the strength and combability of SSL certificate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ssllabs.com/ssltest"&gt;SSL Server Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="security"></category><category term="ssl"></category></entry><entry><title>Cloud virtual machine</title><link href="http://blog.heimsbakk.net/posts/2014/2014-04-13-digitalocean.html" rel="alternate"></link><updated>2014-04-13T17:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-04-13:posts/2014/2014-04-13-digitalocean.html</id><summary type="html">&lt;p&gt;Easiest way I know to create cloud virtual machine is to create a Droplet on Digital Ocean.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/?refcode=2c2348527899"&gt;DigialOcean&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;</summary><category term="cloud"></category><category term="vm"></category></entry><entry><title>Scaling in the Linux Networking Stack</title><link href="http://blog.heimsbakk.net/posts/2014/2014-04-12-link.html" rel="alternate"></link><updated>2014-04-12T16:00:00+02:00</updated><author><name>arnulf</name></author><id>tag:blog.heimsbakk.net,2014-04-12:posts/2014/2014-04-12-link.html</id><summary type="html">&lt;p&gt;Documentation for increaseing parallelism and performance for multi-processor systems. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/torvalds/linux/blob/master/Documentation/networking/scaling.txt"&gt;scaling.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="network"></category><category term="tuning"></category></entry></feed>